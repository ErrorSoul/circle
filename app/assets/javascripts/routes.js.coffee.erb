
admin = angular.module( 'admin',['ngRoute', 'ngResource'])

admin.config [
  '$httpProvider'
  '$routeProvider'
  '$locationProvider'
  '$provide'
  ($httpProvider, $routeProvider, $locationProvider, $provide) ->
  
    authToken = $("meta[name=csrf-token]").attr("content")
    $httpProvider.defaults.headers.common["X-CSRF-TOKEN"] = authToken
    # enabling html5Mode
    #$locationProvider.html5Mode true
    #$locationProvider.hashPrefix('!')
    
   
  
  
  
    
    #correct /admin/login html5 !
    # get "/"  
    
     
    $routeProvider
      .when '/login',
        templateUrl: "<%= asset_path('login.html') %>"
        controller: 'loginCtrl'

      .when '/dashboard',
        #templateUrl: '/assets/dash.html'
        #controller : "LocationController"
        templateUrl: "<%= asset_path('dashboard.html') %>"
        controller: 'DashboardCtrl'
]





## mock class for test
admin.service("Mockach", [class X

    t: () -> return 3
    b: () -> return 4
  ]) 
###
first method to pass service in coffeescript
myClass = () ->

myClass.prototype.t = -> return 3


admin.service("Mockach", myClass)

#second method -------------------------
admin.service("Mockach", [class X

    t: () -> return 3
    b: () -> return 4
  ]) 
###
admin.service 'sessionStorage', ["$http", class Sessions

  constructor: (@$http) ->
    @_user = {}
    @_authorized = false

  authorized: ->
    @_authorized is "true"

  setAuth: (status) ->
    @_authorized = status
    

  getUser:  ->
    @_user

  setUser: (user) ->
    @_user.id = user.id 
    @_user.name = user.name 

  login: (newUser, callback)->
    @$http.post('/sessions', user: newUser).success(callback)
          .error((error) -> console.log(error))

  logout: (callback) ->
    @$http.delete('/sessions', id: 1).success(callback)
          .error((error) -> console.log(error))

  updateUser: (newUser, status) =>
    if status is "true"
      user = newUser
    else
      user = {}
    @setUser(user)
    @setAuth(status)


 ]

admin.factory 'Post', ['$resource', ($resource) ->
  $resource('/posts/:id', {id: '@id'},
    'query':
      method: 'GET'
      #isArray: true




      )


  ]

#########################################
# controllers
######################################### 
admin.controller 'loginCtrl',["$scope", "$location","sessionStorage", ($scope, $location, sessionStorage) ->
        #debug --------------------
        #$scope.email = "EMAIL"
        $scope.user = {}
        $scope.user.email = "oleg@mail.ru"
        $scope.user.password = "leelovaya"
        # ------------------------
        
        
        $scope.login = (user) ->
          #$scope.email = user.email
          #$scope.password = user.password
          $scope.user = {}
          sessionStorage.login(user, (data) ->
            sessionStorage.updateUser(data.user, data.authorized))
              .then(loginRequestHandler, loginErrorHandler)
            
            
            
    
        loginRequestHandler = (result) ->
          console.log($location.path(), "FFFFE")
          if sessionStorage.authorized()
            $location.path('/dashboard')
          else
            $scope.message = "Invalid login or password"

        loginErrorHandler = (error) ->
          $scope.message = "Error #{error}"

       
        $scope.showMessage = ->
          $scope.message isnt undefined and $scope.message.length >0
          

  
]

admin.controller "DashboardCtrl", ["$scope", "sessionStorage", "Post", ($scope, sessionStorage, Post) ->
  console.log(Post.query(), "POST")
  console.log(Post.query().posts, "POSTee")
  $scope.posts = Post.query()
  $scope.us = Post.query().$promise.then((data)->
    console.log(data,"DAAATA")
    console.log(data.posts,"FFFFAATA")
    console.log(data.posts[0].title,"DAAATA")
    $scope.posts = data.posts)
  
  
  ]



        



